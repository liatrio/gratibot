name: "prod"
on:
  push:
    tags:
      - v*.*.*
env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/gratibot

jobs:
  build:
    name: Tag image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Generate tag
        id: tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME:${{ steps.tag.outputs.tag }} --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: docker push $IMAGE_NAME:${{ steps.tag.outputs.tag }}
    outputs:
      docker_tag: ${{ steps.tag.outputs.tag }}
  plan:
    name: "Terraform Prod plan"
    runs-on: ubuntu-latest
    environment:
      name: "prod-plan"
    container: "hashicorp/terraform:0.14.10"
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Plan Gratibot prod deployment
        working-directory: tf
        run: |
          terraform init -backend-config=backends/prod.tf
          terraform plan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: "1b4a4fed-fed8-4823-a8a0-3d5cea83d122"
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_PROD_SUBSCRIPTION_ID }}
          TF_VAR_acr_subscription_id: ${{ secrets.AZURE_PROD_SUBSCRIPTION_ID }}
          TF_VAR_instance_capacity: "2"
          TF_VAR_gratibot_image: "${{ env.IMAGE_NAME }}:${{ needs.build.outputs.docker_tag }}"
          TF_VAR_environment: "prod"
          TF_VAR_signing_secret: ${{ secrets.PROD_PLAN_SIGNING_SECRET }}
          TF_VAR_bot_user_token: ${{ secrets.PROD_PLAN_BOT_TOKEN }}
          TF_VAR_gratibot_recognize_emoji: ":fistbump:"
  apply:
    name: "Terraform Prod Apply"
    runs-on: ubuntu-latest
    environment:
      name: "prod"
    container: "hashicorp/terraform:0.14.10"
    needs: [build, plan]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy Gratibot to Prod
        working-directory: tf
        run: |
          terraform init -backend-config=backends/prod.tf
          terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: "1b4a4fed-fed8-4823-a8a0-3d5cea83d122"
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_PROD_SUBSCRIPTION_ID }}
          TF_VAR_acr_subscription_id: ${{ secrets.AZURE_PROD_SUBSCRIPTION_ID }}
          TF_VAR_instance_capacity: "2"
          TF_VAR_gratibot_image: "${{ env.IMAGE_NAME }}:${{ needs.build.outputs.docker_tag }}"
          TF_VAR_environment: "prod"
          TF_VAR_signing_secret: ${{ secrets.PROD_SIGNING_SECRET }}
          TF_VAR_bot_user_token: ${{ secrets.PROD_BOT_TOKEN }}
          TF_VAR_gratibot_recognize_emoji: ":fistbump:"
