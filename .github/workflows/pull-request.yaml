name: "pull request"
on:
  pull_request:
    branches: [main]
    paths-ignore:
      - "README.md"
      - "catalog.yaml"
env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/gratibot

jobs:
  setup:
    name: Pipeline Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Generate tag
        id: tag
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    outputs:
      docker-tag: ${{ steps.tag.outputs.sha_short }}

  build:
    name: Docker
    needs: setup
    uses: liatrio/github-workflows/.github/workflows/docker-build.yaml@main
    with:
      repository: ghcr.io/liatrio
      image-name: gratibot
      tag: ${{ needs.setup.outputs.docker-tag }}

  azure-terragrunt-pr-plan:
    uses: liatrio/github-workflows/.github/workflows/azure-terragrunt-pr-plan.yaml@v0.3.2
    with:
      WORKING_DIR: infra/terragrunt/nonprod/gratibot/
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_TENANT_ID: "1b4a4fed-fed8-4823-a8a0-3d5cea83d122"
    env:
      TF_VAR_acr_subscription_id: ${{ secrets.AZURE_NONPROD_SUBSCRIPTION_ID }}
      TF_VAR_gratibot_image: "${{ env.IMAGE_NAME }}:${{ needs.build.outputs.docker_tag }}"
      TF_VAR_app_token: ${{ secrets.NONPROD_APP_TOKEN }}
      TF_VAR_bot_user_token: ${{ secrets.NONPROD_BOT_TOKEN }}
